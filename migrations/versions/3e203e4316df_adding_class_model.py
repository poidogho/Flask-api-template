"""adding class model

Revision ID: 3e203e4316df
Revises: 
Create Date: 2022-01-15 19:49:39.761627

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e203e4316df'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Class',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('Notification')
    # op.drop_table('HomeImage')
    # op.drop_table('pg_migrate')
    # op.drop_column('Home', 'deletedAt')
    # op.drop_column('Home', 'updatedAt')
    # op.drop_column('Home', 'createdAt')
    # op.alter_column('User', 'othernames',
    #            existing_type=sa.VARCHAR(length=100),
    #            nullable=False)
    # op.alter_column('User', 'role',
    #            existing_type=sa.VARCHAR(length=100),
    #            nullable=False)
    # op.drop_index('User_searchValues_idx', table_name='User')
    # op.create_unique_constraint(None, 'User', ['email'])
    # op.drop_column('User', 'deletedAt')
    # op.drop_column('User', 'updatedAt')
    # op.drop_column('User', 'createdAt')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('updatedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('deletedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'User', type_='unique')
    op.create_index('User_searchValues_idx', 'User', ['email'], unique=False)
    op.alter_column('User', 'role',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('User', 'othernames',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.add_column('Home', sa.Column('createdAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('Home', sa.Column('updatedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('Home', sa.Column('deletedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_table('pg_migrate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('run_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pg_migrate_pkey')
    )
    op.create_table('HomeImage',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('homeId', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('imageUrl', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updatedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deletedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['homeId'], ['Home.id'], name='HomeImage_homeId_fkey'),
    sa.PrimaryKeyConstraint('id', name='HomeImage_pkey')
    )
    op.create_table('Notification',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('interest', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('viewingTime', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('adminId', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updatedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deletedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['adminId'], ['User.id'], name='Notification_adminId_fkey'),
    sa.PrimaryKeyConstraint('id', name='Notification_pkey')
    )
    op.drop_table('Class')
    # ### end Alembic commands ###
